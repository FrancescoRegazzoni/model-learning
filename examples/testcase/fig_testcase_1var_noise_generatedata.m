clear
do_export = 1;

noise_levels = [1e-1,1e-2,1e-3,1e-4,1e-5,1e-6];
fraction_obs = .5;
obs_err = 10.^-(1:6);
n_tests = 1e3;

%%
problem = problem_get('testcase','testcase_1var_exp.ini');
HFmod = problem.get_model(problem);
db = database_read('db_figures.txt',problem);
type = 1; %alpha constr.
%%
outputs = [];
for i_noise = 1:length(noise_levels)
    noise = noise_levels(i_noise);
    db_filtered = db(db.noise == noise & db.type == type,:);
    ANNmod = read_model_fromfile(problem,db_filtered.dir{1},struct('show_history',1));    
    ret = da_estimate_predict(HFmod,ANNmod,obs_err,struct(...
                                                'da_obs_err',obs_err,...
                                                'pause_each_test',0,...
                                                'do_plot',0,...
                                                'do_plot_error',0,...
                                                'fraction_obs',fraction_obs,...
                                                'n_tests',n_tests));
    if do_export
        save(sprintf('fig/testcase_1var_noise_%1.0e.mat',noise),'noise','ret');
    end
end
%%
ret = da_estimate_predict(HFmod,HFmod,obs_err,struct(...
                                    'da_obs_err',obs_err,...
                                    'pause_each_test',0,...
                                    'do_plot',0,...
                                    'do_plot_error',0,...
                                    'fraction_obs',fraction_obs,...
                                    'n_tests',n_tests));
if do_export
    save('fig/testcase_1var_HF.mat','ret');
end
%%
ret = da_estimate_predict(HFmod,db(db.noise > 2e-16 & db.type == type,:),obs_err,struct(...
                                    'da_mod_err',0,...
                                    'pause_each_test',1,...
                                    'do_plot',0,...
                                    'do_plot_error',0,...
                                    'reference_qty','noise_train',...
                                    'fraction_obs',fraction_obs,...
                                    'n_tests',n_tests));
if do_export
    save('fig/testcase_1var_offline_online_noise.mat','ret');
end
